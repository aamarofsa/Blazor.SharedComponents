@page "/employee-list"
@using Base.Models;

<PageTitle>Employees List</PageTitle>

<FSA_GenericList @ref=MyGrid Items="Employess" GenericData="GenericListData" ReturnToAction="@((args)=> ReturnToAction(args.Item1, args.Item2))" />

@code {
    private FSA_GenericList<Employee> MyGrid;

    private List<Employee>? Employess { get; set; } = new();

    private GenericListData GenericListData { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Employess = new List<Employee>
        {
            new Employee
            {
                Id = 1,
                Name = "Alexis",
                LastName = "Amaro",
                Age = 38
            },
            new Employee
            {
                Id = 2,
                Name = "Adrian",
                LastName = "Amaro",
                Age = 32
            },
            new Employee
            {
                Id = 3,
                Name = "Yiliana",
                LastName = "Mirabal",
                Age = 35
            },
            new Employee
            {
                Id = 4,
                Name = "Sofia",
                LastName = "E. Mirabal",
                Age = 8
            },
            new Employee
            {
                Id = 5,
                Name = "Juan",
                LastName = "Perez",
                Age = 8
            },
            new Employee
            {
                Id = 6,
                Name = "José",
                LastName = "Fernandez",
                Age = 8
            },
        };

        GenericListData = new GenericListData()
        {
                SelectionMode = SelectionMode.Multiple,
                AllowFiltering = true,
                AllowAlternatingRows = true,
                AllowPaging = true,
                PageSize = 10,
                DataColumns = new List<DataColumn>
                {
                    new DataColumn
                    {
                        Property = nameof(Employee.Id),
                        Title = "ID",
                        Sortable = true,
                        Pickable = false,
                        Frozen = true,
                        Width = "80px",
                    },
                    new DataColumn
                    {
                        Property = nameof(Employee.Name),
                        Title = "NAME",
                        Filterable = true,
                        Sortable = true,
                    },
                    new DataColumn
                    {
                        Property = nameof(Employee.LastName),
                        Title = "LAST NAME",
                        Filterable = true,
                        Sortable = true,
                    },
                    new DataColumn
                    {
                        Property = nameof(Employee.Age),
                        Title = "AGE",
                        Filterable = true,
                        Sortable = true,
                        Visible = false
                    },
                },
        };
    }

    public void ReturnToAction(string action, Object item)
    {
        try
        {
            if (action == "delete")
            {
                var employee = item as Employee;
                Employess.Remove(employee);

                Console.WriteLine(action);
            }
            if (action == "edit")
            {
                Console.WriteLine(action);
            }
            
            MyGrid.MyGrid.Reload();
        }
        catch (Exception)
        {
        }
    }
}
